"use strict";(self.webpackChunksleact_ts_front=self.webpackChunksleact_ts_front||[]).push([[962],{79250:(n,e,t)=>{t.d(e,{Z:()=>m});var r=t(15692),o=t(38678),a=t(73046),l=t(83564),i=t(9669),c=t.n(i),u=t(67294),s=t(5977),p=t(39249),d=t(8100);function f(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}const m=function(n){var e,t,i=n.show,m=n.onCloseModal,h=n.setShowInviteChannelModal,b=(0,s.UO)(),g=b.workspace,v=b.channel,x=(e=(0,o.Z)(""),t=3,function(n){if(Array.isArray(n))return n}(e)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,o,a=[],l=!0,i=!1;try{for(t=t.call(n);!(l=(r=t.next()).done)&&(a.push(r.value),!e||a.length!==e);l=!0);}catch(n){i=!0,o=n}finally{try{l||null==t.return||t.return()}finally{if(i)throw o}}return a}}(e,t)||function(n,e){if(n){if("string"==typeof n)return f(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?f(n,e):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),y=x[0],w=x[1],k=x[2],E=((0,d.ZP)("http://localhost:3095/api/users",l.Z).data,(0,u.useCallback)((function(n){n.preventDefault(),y&&y.trim()&&c().post("http://localhost:3095/api/workspaces/".concat(g,"/channels/").concat(v,"/members"),{email:y}).then((function(){h(!1),k("")})).catch((function(n){var e;console.dir(n),p.Am.error(null===(e=n.response)||void 0===e?void 0:e.data,{position:"bottom-center"})}))}),[v,y,k,h,g]));return u.createElement(r.Z,{show:i,onCloseModal:m},u.createElement("form",{onSubmit:E},u.createElement(a.__,{id:"member-label"},u.createElement("span",null,"채널 멤버 초대"),u.createElement(a.II,{id:"member",value:y,onChange:w})),u.createElement(a.zx,{type:"submit"},"초대하기")))}},15692:(n,e,t)=>{t.d(e,{Z:()=>s});var r,o,a=t(76741);function l(n,e){return e||(e=n.slice(0)),Object.freeze(Object.defineProperties(n,{raw:{value:Object.freeze(e)}}))}var i=a.Z.div(r||(r=l(["\n  position: fixed;\n  text-align: center;\n  left: 0;\n  bottom: 0;\n  top: 0;\n  right: 0;\n  z-index: 1022;\n  & > div {\n    margin-top: 200px;\n    display: inline-block;\n    width: 440px;\n    background: white;\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 4px 12px 0 rgba(0, 0, 0, 0.12);\n    background-color: rgba(var(--sk_foreground_min_solid, 248, 248, 248), 1);\n    border-radius: 6px;\n    user-select: none;\n    max-width: 440px;\n    padding: 30px 40px 0;\n    z-index: 1012;\n    position: relative;\n  }\n"]))),c=a.Z.button(o||(o=l(["\n  position: absolute;\n  right: 10px;\n  top: 6px;\n  background: transparent;\n  border: none;\n  font-size: 30px;\n  cursor: pointer;\n"]))),u=t(67294);const s=function(n){var e=n.show,t=n.children,r=n.onCloseModal,o=(0,u.useCallback)((function(n){n.stopPropagation()}),[]);return e?u.createElement(i,{onClick:r},u.createElement("div",{onClick:o},u.createElement(c,{onClick:r},"×"),t)):null}},38678:(n,e,t)=>{t.d(e,{Z:()=>a});var r=t(67294);function o(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}const a=function(n){var e,t,a=(e=(0,r.useState)(n),t=2,function(n){if(Array.isArray(n))return n}(e)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,o,a=[],l=!0,i=!1;try{for(t=t.call(n);!(l=(r=t.next()).done)&&(a.push(r.value),!e||a.length!==e);l=!0);}catch(n){i=!0,o=n}finally{try{l||null==t.return||t.return()}finally{if(i)throw o}}return a}}(e,t)||function(n,e){if(n){if("string"==typeof n)return o(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?o(n,e):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),l=a[0],i=a[1];return[l,(0,r.useCallback)((function(n){i(n.target.value)}),[]),i]}},32951:(n,e,t)=>{t.d(e,{Z:()=>l});var r=t(67294),o=t(93213),a={};const l=function(n){var e=(0,r.useCallback)((function(){n&&a[n]&&a[n].on("disconnect",(function(){delete a[n]}))}),[n]);return n?(a[n]||(a[n]=(0,o.ZP)("".concat("http://localhost:3095","/ws-").concat(n)),a[n].on("connect",(function(n){console.log(n)}))),[a[n],e]):[void 0,e]}},13962:(n,e,t)=>{t.r(e),t.d(e,{default:()=>In});var r,o,a,l,i,c,u,s,p,d,f,m,h,b,g=t(83564),v=t(9669),x=t.n(v),y=t(67294),w=t(73727),k=t(5977),E=t(8100),Z=t(66182),C=t.n(Z),S=t(76741);function A(n,e){return e||(e=n.slice(0)),Object.freeze(Object.defineProperties(n,{raw:{value:Object.freeze(e)}}))}var I,O,j=S.Z.div(r||(r=A(["\n  float: right;\n"]))),z=S.Z.header(o||(o=A(["\n  height: 38px;\n  background: #350d36;\n  color: #ffffff;\n  box-shadow: 0 1px 0 0 rgba(255, 255, 255, 0.1);\n  padding: 5px;\n  text-align: center;\n"]))),_=S.Z.img(a||(a=A(["\n  width: 28px;\n  height: 28px;\n  position: absolute;\n  top: 5px;\n  right: 16px;\n"]))),P=S.Z.div(l||(l=A(["\n  display: flex;\n  padding: 20px;\n  & img {\n    display: flex;\n  }\n  & > div {\n    display: flex;\n    flex-direction: column;\n    margin-left: 10px;\n  }\n  & #profile-name {\n    font-weight: bold;\n    display: inline-flex;\n  }\n  & #profile-active {\n    font-size: 13px;\n    display: inline-flex;\n  }\n"]))),M=S.Z.button(i||(i=A(["\n  border: none;\n  width: 100%;\n  border-top: 1px solid rgb(29, 28, 29);\n  background: transparent;\n  display: block;\n  height: 33px;\n  padding: 5px 20px 5px;\n  outline: none;\n  cursor: pointer;\n"]))),U=S.Z.div(c||(c=A(["\n  display: flex;\n  flex: 1;\n"]))),T=S.Z.div(u||(u=A(["\n  width: 65px;\n  display: inline-flex;\n  flex-direction: column;\n  align-items: center;\n  background: #3f0e40;\n  border-top: 1px solid rgb(82, 38, 83);\n  border-right: 1px solid rgb(82, 38, 83);\n  vertical-align: top;\n  text-align: center;\n  padding: 15px 0 0;\n"]))),N=S.Z.nav(s||(s=A(["\n  width: 260px;\n  display: inline-flex;\n  flex-direction: column;\n  background: #3f0e40;\n  color: rgb(188, 171, 188);\n  vertical-align: top;\n  & a {\n    padding-left: 36px;\n    color: inherit;\n    text-decoration: none;\n    height: 28px;\n    line-height: 28px;\n    display: flex;\n    align-items: center;\n    &.selected {\n      color: white;\n    }\n  }\n  & .bold {\n    color: white;\n    font-weight: bold;\n  }\n  & .count {\n    margin-left: auto;\n    background: #cd2553;\n    border-radius: 16px;\n    display: inline-block;\n    font-size: 12px;\n    font-weight: 700;\n    height: 18px;\n    line-height: 18px;\n    padding: 0 9px;\n    color: white;\n    margin-right: 16px;\n  }\n  & h2 {\n    height: 36px;\n    line-height: 36px;\n    margin: 0;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n    font-size: 15px;\n  }\n"]))),$=S.Z.button(p||(p=A(["\n  height: 64px;\n  line-height: 64px;\n  border: none;\n  width: 100%;\n  text-align: left;\n  border-top: 1px solid rgb(82, 38, 83);\n  border-bottom: 1px solid rgb(82, 38, 83);\n  font-weight: 900;\n  font-size: 24px;\n  background: transparent;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  padding: 0;\n  padding-left: 16px;\n  margin: 0;\n  color: white;\n  cursor: pointer;\n"]))),D=S.Z.div(d||(d=A(["\n  height: calc(100vh - 102px);\n  overflow-y: auto;\n"]))),L=S.Z.div(f||(f=A(["\n  padding: 10px 0 0;\n  & h2 {\n    padding-left: 20px;\n  }\n  & > button {\n    width: 100%;\n    height: 28px;\n    padding: 4px;\n    border: none;\n    background: transparent;\n    border-top: 1px solid rgb(28, 29, 28);\n    cursor: pointer;\n    &:last-of-type {\n      border-bottom: 1px solid rgb(28, 29, 28);\n    }\n  }\n"]))),W=S.Z.div(m||(m=A(["\n  flex: 1;\n"]))),H=S.Z.button(h||(h=A(["\n  color: white;\n  font-size: 24px;\n  display: inline-block;\n  width: 40px;\n  height: 40px;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n"]))),B=S.Z.button(b||(b=A(["\n  display: inline-block;\n  width: 40px;\n  height: 40px;\n  border-radius: 10px;\n  background: white;\n  border: 3px solid #3f0e40;\n  margin-bottom: 15px;\n  font-size: 18px;\n  font-weight: 700;\n  color: black;\n  cursor: pointer;\n"]))),F=t(23810);function q(n,e){return e||(e=n.slice(0)),Object.freeze(Object.defineProperties(n,{raw:{value:Object.freeze(e)}}))}var G=S.Z.div(I||(I=q(["\n  position: fixed;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  z-index: 1000;\n  & > div {\n    position: absolute;\n    display: inline-block;\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 4px 12px 0 rgba(0, 0, 0, 0.12);\n    background-color: rgba(var(--sk_foreground_min_solid, 248, 248, 248), 1);\n    border-radius: 6px;\n    user-select: none;\n    min-width: 360px;\n    z-index: 512;\n    max-height: calc(100vh - 20px);\n    color: rgb(29, 28, 29);\n  }\n"]))),J=S.Z.button(O||(O=q(["\n  position: absolute;\n  right: 10px;\n  top: 6px;\n  background: transparent;\n  border: none;\n  font-size: 30px;\n  cursor: pointer;\n"]))),K=function(n){var e=n.children,t=n.style,r=n.show,o=n.onCloseModal,a=n.closeButton,l=(0,y.useCallback)((function(n){n.stopPropagation()}),[]);return r?y.createElement(G,{onClick:o},y.createElement("div",{style:t,onClick:l},a&&y.createElement(J,{onClick:o},"×"),e)):null};K.defaultProps={closeButton:!0};const Q=K;var R=t(73046),V=t(38678),X=t(15692),Y=t(39249);function nn(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}const en=function(n){var e,t,r=n.show,o=n.onCloseModal,a=n.setShowCreateChannelModal,l=(e=(0,V.Z)(""),t=3,function(n){if(Array.isArray(n))return n}(e)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,o,a=[],l=!0,i=!1;try{for(t=t.call(n);!(l=(r=t.next()).done)&&(a.push(r.value),!e||a.length!==e);l=!0);}catch(n){i=!0,o=n}finally{try{l||null==t.return||t.return()}finally{if(i)throw o}}return a}}(e,t)||function(n,e){if(n){if("string"==typeof n)return nn(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?nn(n,e):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=l[0],c=l[1],u=l[2],s=(0,k.UO)(),p=s.workspace,d=(s.channel,(0,E.ZP)("http://localhost:3095/api/users",g.Z,{dedupingInterval:2e3})),f=d.data,m=(d.error,(0,E.ZP)(f?"http://localhost:3095/api/workspaces/".concat(p,"/channels"):null,g.Z)),h=(m.data,m.mutate),b=(0,y.useCallback)((function(n){n.preventDefault(),x().post("http://localhost:3095/api/workspaces/".concat(p,"/channels"),{name:i},{withCredentials:!0}).then((function(n){console.log(n.data),h(),a(!1),u("")})).catch((function(n){var e;console.dir(n),Y.Am.error(null===(e=n.response)||void 0===e?void 0:e.data,{position:"bottom-center"})}))}),[i]);return r?y.createElement(X.Z,{show:r,onCloseModal:o},y.createElement("form",{onSubmit:b},y.createElement(R.__,{id:"channel-label"},y.createElement("span",null,"채널"),y.createElement(R.II,{id:"channel",value:i,onChange:c})),y.createElement(R.zx,{type:"submit"},"생성하기"))):null};function tn(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}const rn=function(n){var e,t,r=n.show,o=n.onCloseModal,a=n.setShowInviteWorkspaceModal,l=(0,k.UO)().workspace,i=(e=(0,V.Z)(""),t=3,function(n){if(Array.isArray(n))return n}(e)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,o,a=[],l=!0,i=!1;try{for(t=t.call(n);!(l=(r=t.next()).done)&&(a.push(r.value),!e||a.length!==e);l=!0);}catch(n){i=!0,o=n}finally{try{l||null==t.return||t.return()}finally{if(i)throw o}}return a}}(e,t)||function(n,e){if(n){if("string"==typeof n)return tn(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?tn(n,e):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),c=i[0],u=i[1],s=i[2],p=(0,E.ZP)("http://localhost:3095/api/users",g.Z).data,d=(0,E.ZP)(p?"http://localhost:3095/api/workspaces/".concat(l,"/members"):null,g.Z).mutate,f=(0,y.useCallback)((function(n){n.preventDefault(),c&&c.trim()&&x().post("http://localhost:3095/api/workspaces/".concat(l,"/members"),{email:c}).then((function(){d(),a(!1),s("")})).catch((function(n){var e;console.dir(n),Y.Am.error(null===(e=n.response)||void 0===e?void 0:e.data,{position:"bottom-center"})}))}),[c,l,d,a,s]);return y.createElement(X.Z,{show:r,onCloseModal:o},y.createElement("form",{onSubmit:f},y.createElement(R.__,{id:"member-label"},y.createElement("span",null,"이메일"),y.createElement(R.II,{id:"member",type:"email",value:c,onChange:u})),y.createElement(R.zx,{type:"submit"},"초대하기")))};var on,an,ln,cn=t(79250),un=S.Z.button(on||(an=["\n  background: transparent;\n  border: none;\n  width: 26px;\n  height: 26px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  margin-left: 10px;\n  cursor: pointer;\n  ",";\n"],ln||(ln=an.slice(0)),on=Object.freeze(Object.defineProperties(an,{raw:{value:Object.freeze(ln)}}))),(function(n){return n.collapse&&"\n    & i {\n      transform: none;\n    }\n  "}));const sn=function(n){var e=n.channel,t=(0,k.UO)().workspace,r=(0,k.TH)(),o=(0,E.ZP)("http://localhost:3095/api/users",g.Z,{dedupingInterval:2e3}).data,a=localStorage.getItem("".concat(t,"-").concat(e.name))||0,l=(0,E.ZP)(o?"http://localhost:3095/api/workspaces/".concat(t,"/channels/").concat(e.name,"/unreads?after=").concat(a):null,g.Z),i=l.data,c=l.mutate;return(0,y.useEffect)((function(){r.pathname==="/workspace/".concat(t,"/channel/").concat(e.name)&&c(0)}),[c,r.pathname,t,e]),y.createElement(w.OL,{key:e.name,activeClassName:"selected",to:"/workspace/".concat(t,"/channel/").concat(e.name)},y.createElement("span",{className:void 0!==i&&i>0?"bold":void 0},"# ",e.name),void 0!==i&&i>0&&y.createElement("span",{className:"count"},i))};var pn=t(5434);function dn(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}const fn=function(){var n,e,t=(0,k.UO)().workspace,r=(n=(0,y.useState)(!1),e=2,function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,o,a=[],l=!0,i=!1;try{for(t=t.call(n);!(l=(r=t.next()).done)&&(a.push(r.value),!e||a.length!==e);l=!0);}catch(n){i=!0,o=n}finally{try{l||null==t.return||t.return()}finally{if(i)throw o}}return a}}(n,e)||function(n,e){if(n){if("string"==typeof n)return dn(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?dn(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],a=r[1],l=(0,E.ZP)("http://localhost:3095/api/users",g.Z,{dedupingInterval:2e3}).data,i=(0,E.ZP)(l?"http://localhost:3095/api/workspaces/".concat(t,"/channels"):null,g.Z).data,c=(0,y.useCallback)((function(){a((function(n){return!n}))}),[]);return y.createElement(y.Fragment,null,y.createElement("h2",null,y.createElement(un,{collapse:o,onClick:c},o?y.createElement(pn.AeI,null):y.createElement(pn.Ix0,null)),y.createElement("span",null,"Channels")),y.createElement("div",null,!o&&(null==i?void 0:i.map((function(n){return y.createElement(sn,{key:n.id,channel:n})})))))};var mn,hn;function bn(n,e){return e||(e=n.slice(0)),Object.freeze(Object.defineProperties(n,{raw:{value:Object.freeze(e)}}))}var gn=S.Z.div(mn||(mn=bn(["\n  width: 10px;\n  height: 10px;\n  border: solid;\n  border-width: 1px;\n  border-radius: 10px;\n  margin-right: 2px;\n  background-color: green;\n"]))),vn=S.Z.div(hn||(hn=bn(["\n  width: 10px;\n  height: 10px;\n  border: solid;\n  border-width: 1px;\n  border-radius: 10px;\n  margin-right: 2px;\n"])));const xn=function(n){var e=n.member,t=n.isOnline,r=(0,k.UO)().workspace,o=(0,k.TH)(),a=(0,E.ZP)("http://localhost:3095/api/users",g.Z,{dedupingInterval:2e3}).data,l=localStorage.getItem("".concat(r,"-").concat(e.id))||0,i=(0,E.ZP)(a?"http://localhost:3095/api/workspaces/".concat(r,"/dms/").concat(e.id,"/unreads?after=").concat(l):null,g.Z),c=i.data,u=i.mutate;return(0,y.useEffect)((function(){o.pathname==="/workspace/".concat(r,"/dm/").concat(e.id)&&u(0)}),[u,o.pathname,r,e]),y.createElement(w.OL,{key:e.id,activeClassName:"selected",to:"/workspace/".concat(r,"/dm/").concat(e.id)},t?y.createElement(gn,null):y.createElement(vn,null),y.createElement("span",{className:c&&c>0?"bold":void 0},e.nickname),e.id===(null==a?void 0:a.id)&&y.createElement("span",null," (나)"),c&&c>0&&y.createElement("span",{className:"count"},c)||null)};var yn=t(32951);function wn(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,o,a=[],l=!0,i=!1;try{for(t=t.call(n);!(l=(r=t.next()).done)&&(a.push(r.value),!e||a.length!==e);l=!0);}catch(n){i=!0,o=n}finally{try{l||null==t.return||t.return()}finally{if(i)throw o}}return a}}(n,e)||function(n,e){if(n){if("string"==typeof n)return kn(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?kn(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function kn(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}const En=function(){var n=(0,k.UO)().workspace,e=(0,E.ZP)("http://localhost:3095/api/users",g.Z,{dedupingInterval:2e3}).data,t=(0,E.ZP)(e?"http://localhost:3095/api/workspaces/".concat(n,"/members"):null,g.Z).data,r=wn((0,yn.Z)(n),1)[0],o=wn((0,y.useState)(!1),2),a=o[0],l=o[1],i=wn((0,y.useState)([]),2),c=i[0],u=i[1],s=(0,y.useCallback)((function(){l((function(n){return!n}))}),[]);return(0,y.useEffect)((function(){console.log("DMList: workspace 바꼈다",n),u([])}),[n]),(0,y.useEffect)((function(){return null==r||r.on("onlineList",(function(n){u(n)})),function(){null==r||r.off("onlineList")}}),[r]),y.createElement(y.Fragment,null,y.createElement("h2",null,y.createElement(un,{collapse:a,onClick:s},a?y.createElement(pn.AeI,null):y.createElement(pn.Ix0,null)),y.createElement("span",null,"Direct Messages")),y.createElement("div",null,!a&&(null==t?void 0:t.map((function(n){var e=c.includes(n.id);return y.createElement(xn,{key:n.id,member:n,isOnline:e})})))))};function Zn(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,o,a=[],l=!0,i=!1;try{for(t=t.call(n);!(l=(r=t.next()).done)&&(a.push(r.value),!e||a.length!==e);l=!0);}catch(n){i=!0,o=n}finally{try{l||null==t.return||t.return()}finally{if(i)throw o}}return a}}(n,e)||function(n,e){if(n){if("string"==typeof n)return Cn(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Cn(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Cn(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}var Sn=(0,F.ZP)((function(){return Promise.all([t.e(18),t.e(202),t.e(94)]).then(t.bind(t,83094))})),An=(0,F.ZP)((function(){return Promise.all([t.e(18),t.e(750),t.e(256)]).then(t.bind(t,65256))}));const In=function(){var n,e=Zn((0,y.useState)(!1),2),t=e[0],r=e[1],o=Zn((0,y.useState)(!1),2),a=o[0],l=o[1],i=Zn((0,y.useState)(!1),2),c=i[0],u=i[1],s=Zn((0,y.useState)(!1),2),p=s[0],d=s[1],f=Zn((0,y.useState)(!1),2),m=f[0],h=f[1],b=Zn((0,y.useState)(!1),2),v=b[0],Z=b[1],S=Zn((0,V.Z)(""),3),A=S[0],I=S[1],O=S[2],F=Zn((0,V.Z)(""),3),q=F[0],G=F[1],J=F[2],K=(0,k.UO)().workspace,nn=Zn((0,yn.Z)(K),2),tn=nn[0],on=nn[1],an=(0,E.ZP)("http://localhost:3095/api/users",g.Z,{dedupingInterval:2e3}),ln=an.data,un=(an.error,an.mutate),sn=(0,E.ZP)(ln?"http://localhost:3095/api/workspaces/".concat(K,"/channels"):null,g.Z).data;(0,y.useEffect)((function(){sn&&ln&&tn&&tn.emit("login",{id:ln.id,channelId:sn.map((function(n){return n.id}))})}),[tn,sn,ln]),(0,y.useEffect)((function(){return function(){on()}}),[K,on]);var pn=(0,y.useCallback)((function(){x().post("http://localhost:3095/api/users/logout",null,{withCredentials:!0}).then((function(){un()}))}),[]),dn=(0,y.useCallback)((function(n){n.stopPropagation(),r((function(n){return!n}))}),[]),mn=(0,y.useCallback)((function(n){n.preventDefault(),A&&A.trim()&&q&&q.trim()&&(console.log("클릭"),x().post("http://localhost:3095/api/workspaces",{workspace:A,url:q}).then((function(){un(),l(!1),O(""),J("")})).catch((function(n){var e;console.log(n),Y.Am.error(null===(e=n.response)||void 0===e?void 0:e.data,{position:"bottom-center"})})))}),[A,q]),hn=(0,y.useCallback)((function(){l(!0)}),[]),bn=(0,y.useCallback)((function(){d(!0)}),[]),gn=(0,y.useCallback)((function(){l(!1),d(!1),h(!1),Z(!1)}),[]),vn=(0,y.useCallback)((function(){u((function(n){return!n}))}),[c]),xn=(0,y.useCallback)((function(){h(!m)}),[m]);return ln?y.createElement("div",null,y.createElement(z,null,y.createElement(j,null,y.createElement("span",{onClick:dn},y.createElement(_,{src:C().url(ln.email,{s:"28px",d:"retro"}),alt:ln.nickname}),t&&y.createElement(Q,{style:{right:0,top:38},show:t,onCloseModal:dn},y.createElement(P,null,y.createElement("img",{src:C().url(ln.email,{s:"36px",d:"retro"}),alt:ln.nickname}),y.createElement("div",null,y.createElement("span",{id:"profile-name"},ln.nickname),y.createElement("span",{id:"profile-active"},"Active"))),y.createElement(M,{onClick:pn},"로그아웃"))))),y.createElement(U,null,y.createElement(T,null,ln.Workspaces.map((function(n){return y.createElement(w.rU,{key:n.id,to:"/workspace/".concat(n.url,"/channel/일반")},y.createElement(B,null,n.name.slice(0,1).toUpperCase()))})),y.createElement(H,{onClick:hn},"+")),y.createElement(N,null,y.createElement($,{onClick:vn},K),y.createElement(D,null,y.createElement(Q,{show:c,onCloseModal:vn,style:{top:95,left:80}},y.createElement(L,null,y.createElement("h2",null,null==ln||null===(n=ln.Workspaces.find((function(n){return n.url===K})))||void 0===n?void 0:n.name),y.createElement("button",{onClick:xn},"워크스페이스에 사용자 초대"),y.createElement("button",{onClick:bn},"채널 만들기"),y.createElement("button",{onClick:pn},"로그아웃"))),y.createElement(fn,null),y.createElement(En,null))),y.createElement(W,null,y.createElement(k.rs,null,y.createElement(k.AW,{path:"/workspace/:workspace/channel/:channel",component:An}),y.createElement(k.AW,{path:"/workspace/:workspace/dm/:id",component:Sn})))),y.createElement(X.Z,{show:a,onCloseModal:gn},y.createElement("form",{onSubmit:mn},y.createElement(R.__,{id:"workspace-label"},y.createElement("span",null,"워크스페이스 이름"),y.createElement(R.II,{id:"workspace",value:A,onChange:I})),y.createElement(R.__,{id:"workspace-url-label"},y.createElement("span",null,"워크스페이스 url"),y.createElement(R.II,{id:"workspace-url",value:q,onChange:G})),y.createElement(R.zx,{type:"submit"},"생성하기"))),y.createElement(en,{show:p,onCloseModal:gn,setShowCreateChannelModal:d}),y.createElement(rn,{show:m,onCloseModal:gn,setShowInviteWorkspaceModal:h}),y.createElement(cn.Z,{show:v,onCloseModal:gn,setShowInviteChannelModal:Z})):y.createElement(k.l_,{to:"/login"})}},73046:(n,e,t)=>{t.d(e,{h4:()=>f,l0:()=>m,__:()=>h,II:()=>b,zx:()=>g,jj:()=>v,fB:()=>x,rU:()=>y});var r,o,a,l,i,c,u,s,p=t(76741);function d(n,e){return e||(e=n.slice(0)),Object.freeze(Object.defineProperties(n,{raw:{value:Object.freeze(e)}}))}var f=p.Z.header(r||(r=d(["\n  text-align: center;\n  font-family: Slack-Larsseit, Helvetica Neue, Helvetica, Segoe UI, Tahoma, Arial, sans-serif;\n  font-weight: 700;\n  font-size: 48px;\n  line-height: 46px;\n  letter-spacing: -0.75px;\n  margin-top: 50px;\n  margin-bottom: 50px;\n"]))),m=p.Z.form(o||(o=d(["\n  margin: 0 auto;\n  width: 400px;\n  max-width: 400px;\n"]))),h=p.Z.label(a||(a=d(["\n  margin-bottom: 16px;\n  & > span {\n    display: block;\n    text-align: left;\n    padding-bottom: 8px;\n    font-size: 15px;\n    cursor: pointer;\n    line-height: 1.46666667;\n    font-weight: 700;\n  }\n"]))),b=p.Z.input(l||(l=d(["\n  border-radius: 4px;\n  --saf-0: rgba(var(--sk_foreground_high_solid, 134, 134, 134), 1);\n  border: 1px solid var(--saf-0);\n  transition: border 80ms ease-out, box-shadow 80ms ease-out;\n  box-sizing: border-box;\n  margin: 0 0 20px;\n  width: 100%;\n  color: rgba(var(--sk_primary_foreground, 29, 28, 29), 1);\n  background-color: rgba(var(--sk_primary_background, 255, 255, 255), 1);\n  padding: 12px;\n  height: 44px;\n  padding-top: 11px;\n  padding-bottom: 13px;\n  font-size: 18px;\n  line-height: 1.33333333;\n  &:focus {\n    --saf-0: rgba(var(--sk_highlight, 18, 100, 163), 1);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 0 0 5px rgba(29, 155, 209, 0.3);\n  }\n"]))),g=p.Z.button(i||(i=d(["\n  margin-bottom: 12px;\n  width: 100%;\n  max-width: 100%;\n  color: #fff;\n  background-color: #4a154b;\n  border: none;\n  font-size: 18px;\n  font-weight: 900;\n  height: 44px;\n  min-width: 96px;\n  padding: 0 16px 3px;\n  transition: all 80ms linear;\n  user-select: none;\n  outline: none;\n  cursor: pointer;\n  border-radius: 4px;\n  z-index: 1000;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3);\n  &:hover {\n    background-color: rgba(74, 21, 75, 0.9);\n    border: none;\n  }\n  &:focus {\n    --saf-0: rgba(var(--sk_highlight, 18, 100, 163), 1);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 0 0 5px rgba(29, 155, 209, 0.3);\n  }\n"]))),v=p.Z.div(c||(c=d(["\n  color: #e01e5a;\n  margin: 8px 0 16px;\n  font-weight: bold;\n"]))),x=p.Z.div(u||(u=d(["\n  color: #2eb67d;\n  font-weight: bold;\n"]))),y=p.Z.p(s||(s=d(["\n  font-size: 13px;\n  color: #616061;\n  margin: 0 auto 8px;\n  width: 400px;\n  max-width: 400px;\n  & a {\n    color: #1264a3;\n    text-decoration: none;\n    font-weight: 700;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n"])))},83564:(n,e,t)=>{t.d(e,{Z:()=>a});var r=t(9669),o=t.n(r);const a=function(n){return o().get(n,{withCredentials:!0}).then((function(n){return n.data}))}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,