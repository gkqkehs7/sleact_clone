"use strict";(self.webpackChunksleact_ts_front=self.webpackChunksleact_ts_front||[]).push([[94],{92309:(e,n,t)=>{t.d(n,{Z:()=>Z});var r,a,o,l,i,c,s=t(67294),u=t(76741),p=t(32034);function d(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}var f=u.Z.div(r||(r=d(["\n  display: flex;\n  width: 100%;\n  padding: 20px;\n  padding-top: 0;\n"]))),m=u.Z.form(a||(a=d(["\n  color: rgb(29, 28, 29);\n  font-size: 15px;\n  width: 100%;\n  border-radius: 4px;\n  border: 1px solid rgb(29, 28, 29);\n"]))),h=(0,u.Z)(p.r)(o||(o=d(["\n  font-family: Slack-Lato, appleLogo, sans-serif;\n  font-size: 15px;\n  padding: 8px 9px;\n  width: 100%;\n  & strong {\n    background: skyblue;\n  }\n  & textarea {\n    height: 44px;\n    padding: 9px 10px !important;\n    outline: none !important;\n    border-radius: 4px !important;\n    resize: none !important;\n    line-height: 22px;\n    border: none;\n  }\n  & ul {\n    border: 1px solid lightgray;\n    max-height: 200px;\n    overflow-y: auto;\n    padding: 9px 10px;\n    background: white;\n    border-radius: 4px;\n    width: 150px;\n  }\n"]))),g=u.Z.div(l||(l=d(["\n  position: relative;\n  background: rgb(248, 248, 248);\n  height: 41px;\n  display: flex;\n  border-top: 1px solid rgb(221, 221, 221);\n  align-items: center;\n  border-bottom-left-radius: 4px;\n  border-bottom-right-radius: 4px;\n"]))),b=u.Z.button(i||(i=d(["\n  position: absolute;\n  right: 5px;\n  top: 5px;\n"]))),x=u.Z.button(c||(c=d(["\n  padding: 4px 20px;\n  background: transparent;\n  border: none;\n  display: flex;\n  align-items: center;\n  color: rgb(28, 29, 28);\n  width: 100%;\n  & img {\n    margin-right: 5px;\n  }\n  ",";\n"])),(function(e){return e.focus&&"\n    background: #1264a3;\n    color: white;\n  "})),v=t(3682),y=t(8100),w=t(83564),k=t(5977),E=t(66182),S=t.n(E);const Z=function(e){var n=e.chat,t=e.onSubmitForm,r=e.onChangeChat,a=e.placeholder,o=(0,k.UO)().workspace,l=(0,y.ZP)("http://localhost:3095/api/users",w.Z),i=l.data,c=(l.error,l.mutate,(0,y.ZP)(i?"http://localhost:3095/api/workspaces/".concat(o,"/members"):null,w.Z).data),u=(0,s.useRef)(null);(0,s.useEffect)((function(){u.current&&(0,v.Z)(u.current)}),[]);var d=(0,s.useCallback)((function(e){"Enter"===e.key&&(e.preventDefault(),e.shiftKey||(e.preventDefault(),t(e)))}),[t]),E=(0,s.useCallback)((function(e,n,t,r,a){if(c)return s.createElement(x,{focus:a},s.createElement("img",{src:S().url(c[r].email,{s:"20px",d:"retro"}),alt:c[r].nickname}),s.createElement("span",null,t))}),[c]);return s.createElement(f,null,s.createElement(m,{onSubmit:t},s.createElement(h,{value:n,onChange:r,onKeyDown:d,id:"edit-chat",placeholder:a,inputRef:u,allowSuggestionsAboveCursor:!0},s.createElement(p.p,{appendSpaceOnAdd:!0,trigger:"@",data:(null==c?void 0:c.map((function(e){return{id:e.id,display:e.nickname}})))||[],renderSuggestion:E})),s.createElement(g,null,s.createElement(b,null,"보내기"))))}},32545:(e,n,t)=>{t.d(n,{Z:()=>O});var r,a,o,l=t(76741);function i(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}var c,s,u,p=l.Z.div(r||(r=i(["\n  width: 100%;\n  display: flex;\n  flex: 1;\n"]))),d=l.Z.section(a||(a=i(["\n  margin-top: 20px;\n  border-top: 1px solid #eee;\n"]))),f=l.Z.div(o||(o=i(["\n  display: flex;\n  justify-content: center;\n  flex: 1;\n  width: 100%;\n  position: sticky;\n  top: 14px;\n  & button {\n    font-weight: bold;\n    font-size: 13px;\n    height: 28px;\n    line-height: 27px;\n    padding: 0 16px;\n    z-index: 2;\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 1px 3px 0 rgba(0, 0, 0, 0.08);\n    border-radius: 24px;\n    position: relative;\n    top: -13px;\n    background: white;\n    border: none;\n    outline: none;\n  }\n"]))),m=t(67294),h=l.Z.div(c||(s=["\n  display: flex;\n  padding: 8px 20px;\n  &:hover {\n    background: #eee;\n  }\n  & .chat-img {\n    display: flex;\n    width: 36px;\n    margin-right: 8px;\n    & img {\n      width: 36px;\n      height: 36px;\n    }\n  }\n  & .chat-text {\n    display: flex;\n    flex-wrap: wrap;\n    flex: 1;\n    & p {\n      flex: 0 0 100%;\n      margin: 0;\n    }\n  }\n  & .chat-user {\n    display: flex;\n    flex: 0 0 100%;\n    align-items: center;\n    & > b {\n      margin-right: 5px;\n    }\n    & > span {\n      font-size: 12px;\n    }\n  }\n  & a {\n    text-decoration: none;\n    color: deepskyblue;\n  }\n"],u||(u=s.slice(0)),c=Object.freeze(Object.defineProperties(s,{raw:{value:Object.freeze(u)}})))),g=t(66182),b=t.n(g),x=t(27484),v=t.n(x),y=t(38817),w=t(73727),k=t(5977),E=function(e){var n=e.data,t="Sender"in n?n.Sender:n.User,r=(0,k.UO)().workspace,a=(0,m.useMemo)((function(){return n.content.startsWith("uploads\\")||n.content.startsWith("uploads/")?m.createElement("img",{src:"http://localhost:3095/".concat(n.content),style:{maxHeight:200}}):(0,y.Z)({input:n.content,pattern:/@\[(.+?)]\((\d+?)\)|\n/g,decorator:function(e,n){var t=e.match(/@\[(.+?)]\((\d+?)\)/);return t?m.createElement(w.rU,{key:e+n,to:"/workspace/".concat(r,"/dm/").concat(t[2])},"@",t[1]):m.createElement("br",{key:n})}})}),[r,n.content]);return m.createElement(h,null,m.createElement("div",{className:"chat-img"},m.createElement("img",{src:b().url(t.email,{s:"36px",d:"retro"}),alt:t.nickname})),m.createElement("div",{className:"chat-text"},m.createElement("div",{className:"chat-user"},m.createElement("b",null,t.nickname),m.createElement("span",null,v()(n.createdAt).format(":h:mm A"))),m.createElement("p",null,a)))};const S=(0,m.memo)(E);var Z=t(86658);function A(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}const O=function(e){var n=e.scrollbarRef,t=e.isReachingEnd,r=e.isEmpty,a=e.chatData,o=e.setSize,l=(0,m.useCallback)((function(e){0!==e.scrollTop||t||r||o((function(e){return e+1})).then((function(){var t,r;null===(t=n.current)||void 0===t||t.scrollTop((null===(r=n.current)||void 0===r?void 0:r.getScrollHeight())-e.scrollHeight)}))}),[n]);return m.createElement(p,null,m.createElement(Z.$B,{autoHide:!0,ref:n,onScrollFrame:l},Object.entries(a).map((function(e){var n,t,r=(t=2,function(e){if(Array.isArray(e))return e}(n=e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,a,o=[],l=!0,i=!1;try{for(t=t.call(e);!(l=(r=t.next()).done)&&(o.push(r.value),!n||o.length!==n);l=!0);}catch(e){i=!0,a=e}finally{try{l||null==t.return||t.return()}finally{if(i)throw a}}return o}}(n,t)||function(e,n){if(e){if("string"==typeof e)return A(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?A(e,n):void 0}}(n,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=r[0],o=r[1];return m.createElement(d,{className:"section-".concat(a),key:a},m.createElement(f,null,m.createElement("button",null,a)),o.map((function(e){return m.createElement(S,{key:e.id,data:e})})))}))))}},83094:(e,n,t)=>{t.r(n),t.d(n,{default:()=>C});var r,a,o,l=t(67294),i=t(5977),c=t(76741);function s(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}var u=c.Z.div(r||(r=s(["\n  display: flex;\n  flex-wrap: wrap;\n  height: calc(100vh - 38px);\n  flex-flow: column;\n  position: relative;\n"]))),p=c.Z.header(a||(a=s(["\n  height: 64px;\n  display: flex;\n  width: 100%;\n  --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n  box-shadow: 0 1px 0 var(--saf-0);\n  padding: 20px 16px 20px 20px;\n  font-weight: bold;\n  align-items: center;\n  & img {\n    margin-right: 5px;\n  }\n"]))),d=c.Z.div(o||(o=s(["\n  position: absolute;\n  top: 64px;\n  left: 0;\n  width: 100%;\n  height: calc(100% - 64px);\n  background: white;\n  opacity: 0.7;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 40px;\n"]))),f=t(66182),m=t.n(f),h=t(8100),g=t(44593),b=t(83564),x=t(92309),v=t(32545),y=t(38678),w=t(9669),k=t.n(w),E=t(6501),S=t(32951),Z=t(39249);function A(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,a,o=[],l=!0,i=!1;try{for(t=t.call(e);!(l=(r=t.next()).done)&&(o.push(r.value),!n||o.length!==n);l=!0);}catch(e){i=!0,a=e}finally{try{l||null==t.return||t.return()}finally{if(i)throw a}}return o}}(e,n)||O(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function O(e,n){if(e){if("string"==typeof e)return j(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?j(e,n):void 0}}function j(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}t(55202);const C=function(){var e,n,t,r=(0,i.UO)(),a=r.workspace,o=r.id,c=(0,h.ZP)("http://localhost:3095/api/workspaces/".concat(a,"/members/").concat(o),b.Z).data,s=(0,h.ZP)("http://localhost:3095/api/users",b.Z).data,f=(0,g.ZP)((function(e){return"http://localhost:3095/api/workspaces/".concat(a,"/dms/").concat(o,"/chats?perPage=20&page=").concat(e+1)}),b.Z),w=f.data,C=f.mutate,T=f.setSize,z=A((0,l.useState)(!1),2),D=z[0],I=z[1],P=A((0,y.Z)(""),3),_=P[0],R=P[1],U=P[2],F=(0,l.useRef)(null),M=0===(null==w||null===(e=w[0])||void 0===e?void 0:e.length),B=M||w&&(null===(n=w[w.length-1])||void 0===n?void 0:n.length)<20,H=(0,l.useCallback)((function(e){e.preventDefault(),null!=_&&_.trim()&&k().post("http://localhost:3095/api/workspaces/".concat(a,"/dms/").concat(o,"/chats"),{content:_}).then((function(){C(),U(""),localStorage.setItem("".concat(a,"-").concat(o),(new Date).getTime().toString()),setTimeout((function(){var e;null===(e=F.current)||void 0===e||e.scrollToBottom()}),100)})).catch(console.error)}),[_]);console.log(w),(0,l.useEffect)((function(){localStorage.setItem("".concat(a,"-").concat(o),(new Date).getTime().toString())}),[a,o]);var N=A((0,S.Z)(a),1)[0],Y=(0,l.useCallback)((function(e){C((function(n){return null==n||n[0].push(e),localStorage.setItem("".concat(a,"-").concat(o),(new Date).getTime().toString()),n}),!1).then((function(){Z.Am.success("새 메시지가 도착했습니다.",{onClick:function(){var e;null===(e=F.current)||void 0===e||e.scrollToBottom()},closeOnClick:!0})}))}),[o,s,C]);(0,l.useEffect)((function(){return null==N||N.on("dm",Y),function(){null==N||N.off("dm",Y)}}),[N,Y]),(0,l.useEffect)((function(){var e;1===(null==w?void 0:w.length)&&(null===(e=F.current)||void 0===e||e.scrollToBottom())}),[w]);var $,K=(0,E.Z)(w?(t=[]).concat.apply(t,($=w,function(e){if(Array.isArray(e))return j(e)}($)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}($)||O($)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}())).reverse():[]),L=(0,l.useCallback)((function(e){e.preventDefault();var n=new FormData;if(e.dataTransfer.items){for(var t=0;t<e.dataTransfer.items.length;t++)if("file"===e.dataTransfer.items[t].kind){var r=e.dataTransfer.items[t].getAsFile();n.append("image",r)}}else for(var l=0;l<e.dataTransfer.files.length;l++)n.append("image",e.dataTransfer.files[l]);k().post("http://localhost:3095/api/workspaces/".concat(a,"/dms/").concat(o,"/images"),n).then((function(){I(!1),localStorage.setItem("".concat(a,"-").concat(o),(new Date).getTime().toString())}))}),[a,o]),W=(0,l.useCallback)((function(e){console.log("드래그중"),e.preventDefault(),I(!0)}),[]);return c&&s?l.createElement(u,{onDragOver:W,onDrop:L},l.createElement(p,null,l.createElement("img",{src:m().url(c.email,{s:"24px",d:"retro"}),alt:c.nickname}),l.createElement("span",null,c.nickname)),l.createElement(v.Z,{chatData:K,scrollbarRef:F,isReachingEnd:B,isEmpty:M,setSize:T}),l.createElement(Z.Ix,{position:"bottom-center",limit:1}),l.createElement(x.Z,{chat:_,onChangeChat:R,onSubmitForm:H}),D&&l.createElement(d,null,"업로드!")):null}},6501:(e,n,t)=>{t.d(n,{Z:()=>o});var r=t(27484),a=t.n(r);function o(e){var n={};return e.forEach((function(e){var t=a()(e.createdAt).format("YYYY-MM-DD");Array.isArray(n[t])?n[t].push(e):n[t]=[e]})),n}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,