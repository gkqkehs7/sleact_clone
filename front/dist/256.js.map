{"version":3,"file":"256.js","mappings":"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","sources":["webpack://sleact-ts-front/./config.tsx","webpack://sleact-ts-front/./pages/Channel/styles.tsx","webpack://sleact-ts-front/./pages/Channel/index.tsx"],"sourcesContent":["export const backUrl = 'http://15.164.103.236/';\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  height: calc(100vh - 38px);\n  flex-flow: column;\n  position: relative;\n`;\n\nexport const Header = styled.header`\n  height: 64px;\n  display: flex;\n  width: 100%;\n  --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n  box-shadow: 0 1px 0 var(--saf-0);\n  padding: 20px 16px 20px 20px;\n  font-weight: bold;\n  align-items: center;\n  & img {\n    margin-right: 5px;\n  }\n`;\n\nexport const DragOver = styled.div`\n  position: absolute;\n  top: 64px;\n  left: 0;\n  width: 100%;\n  height: calc(100% - 64px);\n  background: white;\n  opacity: 0.7;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 40px;\n`;\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { Container, DragOver, Header } from './styles';\nimport useSWR from 'swr';\nimport useSWRInfinite from 'swr/infinite';\nimport fetcher from '@utils/fetcher';\nimport ChatBox from '@components/ChatBox';\nimport ChatList from '@components/ChatList';\nimport useInput from '@hooks/useInput';\nimport axios from 'axios';\nimport { IChannel, IDM, IUser } from '@typings/db';\nimport makeSection from '@utils/makeSections';\nimport useSocket from '@hooks/useSocket';\nimport { Scrollbars } from 'react-custom-scrollbars-2';\nimport InviteChannelModal from '@components/InviteChannelModal';\nimport { BsFillPersonPlusFill } from 'react-icons/bs';\nimport { toast, ToastContainer } from 'react-toastify';\n\nimport { backUrl } from '../../config';\nconst Channel = () => {\n  const { workspace, channel } = useParams<{ workspace: string; channel: string }>();\n\n  const { data: myData } = useSWR(`${backUrl}/api/users`, fetcher);\n  const { data: channelData } = useSWR<IChannel[]>(`${backUrl}/api/workspaces/${workspace}/channels`, fetcher);\n\n  const {\n    data: chatData,\n    mutate: mutateChat,\n    setSize,\n  } = useSWRInfinite<IDM[]>(\n    (index) => `${backUrl}/api/workspaces/${workspace}/channels/${channel}/chats?perPage=20&page=${index + 1}`,\n    fetcher,\n  );\n\n  console.log(chatData);\n\n  const { data: channelMembersData } = useSWR<any>(\n    myData ? `${backUrl}/api/workspaces/${workspace}/channels/${channel}/members` : null,\n    fetcher,\n  );\n  const [socket] = useSocket(workspace);\n  const [chat, onChangeChat, setChat] = useInput('');\n  const [showInviteChannelModal, setShowInviteChannelModal] = useState(false);\n  const [onDrageOver, setOnDragOver] = useState(false);\n  const scrollbarRef = useRef<Scrollbars>(null);\n\n  const isEmpty = chatData?.[0]?.length === 0; //데이터가 더이상 없는가?\n  const isReachingEnd = isEmpty || (chatData && chatData[chatData.length - 1]?.length < 20); //마지막 페이지인가?\n\n  const onSubmitForm = useCallback(\n    (e) => {\n      e.preventDefault();\n\n      if (chat?.trim()) {\n        axios\n          .post(`${backUrl}/api/workspaces/${workspace}/channels/${channel}/chats`, {\n            content: chat,\n          })\n          .then(() => {\n            mutateChat();\n            setChat('');\n            localStorage.setItem(`${workspace}-${channel}`, new Date().getTime().toString());\n            setTimeout(() => {\n              scrollbarRef.current?.scrollToBottom();\n            }, 100);\n          })\n          .catch(console.error);\n      }\n    },\n    [chat],\n  );\n\n  useEffect(() => {\n    localStorage.setItem(`${workspace}-${channel}`, new Date().getTime().toString());\n  }, [workspace, channel]);\n\n  const onMessage = useCallback(\n    (data: any) => {\n      mutateChat((chatData) => {\n        chatData?.[0].push(data);\n        localStorage.setItem(`${workspace}-${channel}`, new Date().getTime().toString());\n        return chatData;\n      }, false).then(() => {\n        toast.success('새 메시지가 도착했습니다.', {\n          onClick() {\n            scrollbarRef.current?.scrollToBottom();\n          },\n          closeOnClick: true,\n        });\n      });\n    },\n    [myData, mutateChat],\n  );\n\n  useEffect(() => {\n    // on에선 이벤트 이름, callback 함수\n    socket?.on('chat', onMessage);\n    return () => {\n      socket?.off('chat', onMessage);\n    };\n  }, [socket, onMessage]);\n\n  useEffect(() => {\n    if (chatData?.length === 1) {\n      scrollbarRef.current?.scrollToBottom();\n    }\n  }, [chatData]);\n\n  const chatSections = makeSection(chatData ? ([] as IDM[]).concat(...chatData).reverse() : []);\n\n  const onClickInviteChannel = useCallback(() => {\n    setShowInviteChannelModal(true);\n  }, []);\n\n  const onCloseModal = useCallback(() => {\n    setShowInviteChannelModal(false);\n  }, []);\n\n  const onDrop = useCallback(\n    (e) => {\n      e.preventDefault();\n\n      const formData = new FormData();\n      //browser마다 items나 files에 담김\n      if (e.dataTransfer.items) {\n        // dataTransfer.items에 담긴경우\n        for (let i = 0; i < e.dataTransfer.items.length; i++) {\n          if (e.dataTransfer.items[i].kind === 'file') {\n            const file = e.dataTransfer.items[i].getAsFile();\n            formData.append('image', file);\n          }\n        }\n      } else {\n        // dataTransfer.files에 담긴경우\n        for (let i = 0; i < e.dataTransfer.files.length; i++) {\n          formData.append('image', e.dataTransfer.files[i]);\n        }\n      }\n      axios.post(`${backUrl}/api/workspaces/${workspace}/channels/${channel}/images`, formData).then(() => {\n        setOnDragOver(false);\n        localStorage.setItem(`${workspace}-${channel}`, new Date().getTime().toString());\n      });\n    },\n    [workspace, channel],\n  );\n\n  const onDragOver = useCallback((e) => {\n    console.log('드래그중');\n    e.preventDefault();\n    setOnDragOver(true);\n  }, []);\n\n  if (!channelData || !myData) {\n    return null;\n  }\n\n  return (\n    <Container onDragOver={onDragOver} onDrop={onDrop}>\n      <Header>\n        <span>#{channel}</span>\n        <div style={{ display: 'flex', flex: 1, justifyContent: 'flex-end', alignItems: 'center' }}>\n          <span>{channelMembersData && channelMembersData[0].Members.length}</span>\n          <BsFillPersonPlusFill onClick={onClickInviteChannel} style={{ marginLeft: '5px' }} />\n        </div>\n      </Header>\n      <ChatList\n        chatData={chatSections}\n        scrollbarRef={scrollbarRef}\n        isReachingEnd={isReachingEnd}\n        isEmpty={isEmpty}\n        setSize={setSize}\n      />\n      <ChatBox chat={chat} onChangeChat={onChangeChat} onSubmitForm={onSubmitForm} />\n      <InviteChannelModal\n        show={showInviteChannelModal}\n        onCloseModal={onCloseModal}\n        setShowInviteChannelModal={setShowInviteChannelModal}\n      />\n      <ToastContainer position=\"bottom-center\" limit={1} />\n      {onDrageOver && <DragOver>업로드!</DragOver>}\n    </Container>\n  );\n};\n\nexport default Channel;\n"],"names":["backUrl","Container","Header","DragOver","useParams","workspace","channel","myData","useSWR","fetcher","data","channelData","useSWRInfinite","index","chatData","mutateChat","mutate","setSize","console","log","channelMembersData","socket","useSocket","useInput","chat","onChangeChat","setChat","useState","showInviteChannelModal","setShowInviteChannelModal","onDrageOver","setOnDragOver","scrollbarRef","useRef","isEmpty","length","isReachingEnd","onSubmitForm","useCallback","e","preventDefault","trim","axios","content","then","localStorage","setItem","Date","getTime","toString","setTimeout","current","scrollToBottom","catch","error","useEffect","onMessage","push","toast","onClick","closeOnClick","on","off","chatSections","makeSection","concat","reverse","onClickInviteChannel","onCloseModal","onDrop","formData","FormData","dataTransfer","items","i","kind","file","getAsFile","append","files","onDragOver","style","display","flex","justifyContent","alignItems","Members","marginLeft","ChatList","ChatBox","InviteChannelModal","show","position","limit"],"sourceRoot":""}