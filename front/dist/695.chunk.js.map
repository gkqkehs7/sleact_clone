{"version":3,"file":"695.chunk.js","mappings":"8pCA6EA,UAnEc,WACZ,OAIIA,EAAAA,EAAAA,IAAO,GAAD,OAAIC,EAAAA,EAAJ,cAAyBC,EAAAA,EAAS,CAC1CC,iBAAkB,MAJZC,EADR,EACEC,KACAC,EAFF,EAEEA,MACAC,EAHF,EAGEA,OAIF,KAAoCC,EAAAA,EAAAA,WAAS,GAA7C,GAAOC,EAAP,KAAmBC,EAAnB,KACA,KAA+BC,EAAAA,EAAAA,GAAS,IAAxC,GAAOC,EAAP,KAAcC,EAAd,KACA,KAAqCF,EAAAA,EAAAA,GAAS,IAA9C,GAAOG,EAAP,KAAiBC,EAAjB,KACA,KAA+BP,EAAAA,EAAAA,UAAS,IAAxC,GAAOQ,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,cACf,SAACC,GACCA,EAAEC,iBACFX,GAAc,GACdY,IAAAA,KAAA,UAEOrB,EAAAA,EAFP,oBAGI,CAAEW,MAAAA,EAAOE,SAAAA,GACT,CACES,iBAAiB,IAGpBC,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACZlB,OAEDqB,OAAM,SAACtB,GACNW,EAAWX,EAAMmB,SAASpB,MAC1BK,GAAc,QAGpB,CAACE,EAAOE,EAAUP,IAGpB,OAAKD,GAASF,EACL,gBAAC,KAAD,CAAUyB,GAAG,iCAIpB,uBAAKC,GAAG,aACN,gBAAC,KAAD,eACA,gBAAC,KAAD,CAAMZ,SAAUA,GACd,gBAAC,KAAD,CAAOY,GAAG,eACR,sCACA,2BACE,gBAAC,KAAD,CAAOC,KAAK,QAAQD,GAAG,QAAQE,KAAK,QAAQC,MAAOrB,EAAOsB,SAAUrB,MAGxE,gBAAC,KAAD,CAAOiB,GAAG,kBACR,oCACA,2BACE,gBAAC,KAAD,CAAOC,KAAK,WAAWD,GAAG,WAAWE,KAAK,WAAWC,MAAOnB,EAAUoB,SAAUnB,KAEjFN,GAAc,gBAAC,KAAD,KAAQO,IAEzB,gBAAC,KAAD,CAAQe,KAAK,UAAb,QAEF,gBAAC,KAAD,sBAEE,qBAAGI,KAAK,WAAR","sources":["webpack://sleact-ts-front/./pages/LogIn/index.tsx"],"sourcesContent":["import useInput from '@hooks/useInput';\nimport { Button, Error, Form, Header, Input, Label, Link } from '@pages/SignUp/styles';\nimport fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport React, { useCallback, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport useSWR from 'swr';\n\nimport { backUrl } from '../../config';\n\nconst LogIn = () => {\n  const {\n    data: userData,\n    error,\n    mutate,\n  } = useSWR(`${backUrl}/api/users`, fetcher, {\n    dedupingInterval: 1000000, //dedupingInterval내에는 cache에서 불러온다\n  });\n  const [logInError, setLogInError] = useState(false);\n  const [email, onChangeEmail] = useInput('');\n  const [password, onChangePassword] = useInput('');\n  const [errorMsg, onErrorMsg] = useState('');\n  const onSubmit = useCallback(\n    (e) => {\n      e.preventDefault();\n      setLogInError(false);\n      axios\n        .post(\n          `${backUrl}/api/users/login`,\n          { email, password },\n          {\n            withCredentials: true,\n          },\n        )\n        .then((response) => {\n          console.log(response);\n          mutate();\n        })\n        .catch((error) => {\n          onErrorMsg(error.response.data);\n          setLogInError(true);\n        });\n    },\n    [email, password, mutate],\n  );\n\n  if (!error && userData) {\n    return <Redirect to=\"/workspace/sleact/channel/일반\" />;\n  }\n\n  return (\n    <div id=\"container\">\n      <Header>Sleact</Header>\n      <Form onSubmit={onSubmit}>\n        <Label id=\"email-label\">\n          <span>이메일 주소</span>\n          <div>\n            <Input type=\"email\" id=\"email\" name=\"email\" value={email} onChange={onChangeEmail} />\n          </div>\n        </Label>\n        <Label id=\"password-label\">\n          <span>비밀번호</span>\n          <div>\n            <Input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={onChangePassword} />\n          </div>\n          {logInError && <Error>{errorMsg}</Error>}\n        </Label>\n        <Button type=\"submit\">로그인</Button>\n      </Form>\n      <Link>\n        아직 회원이 아니신가요?&nbsp;\n        <a href=\"/signup\">회원가입 하러가기</a>\n      </Link>\n    </div>\n  );\n};\n\nexport default LogIn;\n"],"names":["useSWR","backUrl","fetcher","dedupingInterval","userData","data","error","mutate","useState","logInError","setLogInError","useInput","email","onChangeEmail","password","onChangePassword","errorMsg","onErrorMsg","onSubmit","useCallback","e","preventDefault","axios","withCredentials","then","response","console","log","catch","to","id","type","name","value","onChange","href"],"sourceRoot":""}