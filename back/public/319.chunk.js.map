{"version":3,"file":"319.chunk.js","mappings":"8pCA+GA,UAtGA,WACE,IAAcA,GAAaC,EAAAA,EAAAA,IAAO,GAAD,OAAIC,EAAAA,EAAJ,cAAyBC,EAAAA,GAAlDC,KACR,KAAsCC,EAAAA,EAAAA,WAAS,GAA/C,GAAOC,EAAP,KAAoBC,EAApB,KACA,KAA0CF,EAAAA,EAAAA,WAAS,GAAnD,GAAOG,EAAP,KAAsBC,EAAtB,KACA,KAA0CJ,EAAAA,EAAAA,WAAS,GAAnD,GAAOK,EAAP,KAAsBC,EAAtB,KACA,KAA+BC,EAAAA,EAAAA,GAAS,IAAxC,GAAOC,EAAP,KAAcC,EAAd,KACA,KAAqCF,EAAAA,EAAAA,GAAS,IAA9C,GAAOG,EAAP,KAAiBC,EAAjB,KACA,KAAkCJ,EAAAA,EAAAA,GAAS,IAA3C,GAAOK,EAAP,KAAmBC,EAAnB,KACA,KAA4CN,EAAAA,EAAAA,GAAS,IAArD,GAAOO,EAAP,KAAwBC,EAAxB,KAEMC,GAAmBC,EAAAA,EAAAA,cACvB,SAACC,GACCL,EAAYK,EAAEC,OAAOC,OACrBd,EAAiBQ,IAAkBI,EAAEC,OAAOC,SAE9C,CAACN,EAAeD,IAGZQ,GAAwBJ,EAAAA,EAAAA,cAC5B,SAACC,GACCH,EAAiBG,EAAEC,OAAOC,OAC1Bd,EAAiBM,IAAaM,EAAEC,OAAOC,SAEzC,CAACR,EAAUG,IAGPO,GAAWL,EAAAA,EAAAA,cACf,SAACC,GACCA,EAAEK,iBACGb,GAAaA,EAASc,SAGtBnB,IACHH,GAAe,GACfE,GAAiB,GACjBqB,IAAAA,KAAA,UACW5B,EAAAA,EADX,cACgC,CAAEW,MAAAA,EAAOE,SAAAA,EAAUE,SAAAA,IAChDc,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACZvB,GAAiB,MAElB0B,OAAM,SAACC,GAAU,UAChBH,QAAQC,IAAR,UAAYE,EAAMJ,gBAAlB,aAAY,EAAgB5B,MAC5BG,EAA8C,OAA/B,UAAA6B,EAAMJ,gBAAN,mBAAgB5B,YAAhB,eAAsBiC,cAI7C,CAACxB,EAAOE,EAAUE,EAAUP,IAG9B,OAAIV,EACK,gBAAC,KAAD,CAAUsC,GAAG,iCAIpB,uBAAKC,GAAG,aACN,gBAAC,KAAD,eACA,gBAAC,KAAD,CAAMZ,SAAUA,GACd,gBAAC,KAAD,CAAOY,GAAG,eACR,sCACA,2BACE,gBAAC,KAAD,CAAOC,KAAK,QAAQD,GAAG,QAAQE,KAAK,QAAQhB,MAAOZ,EAAO6B,SAAU5B,MAGxE,gBAAC,KAAD,CAAOyB,GAAG,kBACR,mCACA,2BACE,gBAAC,KAAD,CAAOC,KAAK,OAAOD,GAAG,WAAWE,KAAK,WAAWhB,MAAOV,EAAU2B,SAAU1B,MAGhF,gBAAC,KAAD,CAAOuB,GAAG,kBACR,oCACA,2BACE,gBAAC,KAAD,CAAOC,KAAK,WAAWD,GAAG,WAAWE,KAAK,WAAWhB,MAAOR,EAAUyB,SAAUrB,MAGpF,gBAAC,KAAD,CAAOkB,GAAG,wBACR,uCACA,2BACE,gBAAC,KAAD,CACEC,KAAK,WACLD,GAAG,iBACHE,KAAK,iBACLhB,MAAON,EACPuB,SAAUhB,KAGbhB,GAAiB,gBAAC,KAAD,0BAChBK,GAAY,gBAAC,KAAD,qBACbT,GAAe,gBAAC,KAAD,uBACfE,GAAiB,gBAAC,KAAD,6BAEpB,gBAAC,KAAD,CAAQgC,KAAK,UAAb,SAEF,gBAAC,KAAD,mBAEE,qBAAGG,KAAK,UAAR","sources":["webpack://sleact-ts-front/./pages/SignUp/index.tsx"],"sourcesContent":["import useInput from '@hooks/useInput';\nimport fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport React, { useCallback, useState } from 'react';\nimport { Redirect } from 'react-router';\nimport useSWR from 'swr';\nimport { Form, Label, Input, Button, Header, Error, Success, Link } from './styles';\nimport { backUrl } from '../../config';\n\nfunction SignUp() {\n  const { data: userData } = useSWR(`${backUrl}/api/users`, fetcher);\n  const [signUpError, setSignUpError] = useState(false);\n  const [signUpSuccess, setSignUpSuccess] = useState(false);\n  const [mismatchError, setMismatchError] = useState(false);\n  const [email, onChangeEmail] = useInput('');\n  const [nickname, onChangeNickname] = useInput('');\n  const [password, , setPassword] = useInput('');\n  const [passwordCheck, , setPasswordCheck] = useInput('');\n\n  const onChangePassword = useCallback(\n    (e) => {\n      setPassword(e.target.value);\n      setMismatchError(passwordCheck !== e.target.value);\n    },\n    [passwordCheck, setPassword],\n  );\n\n  const onChangePasswordCheck = useCallback(\n    (e) => {\n      setPasswordCheck(e.target.value);\n      setMismatchError(password !== e.target.value);\n    },\n    [password, setPasswordCheck],\n  );\n\n  const onSubmit = useCallback(\n    (e) => {\n      e.preventDefault();\n      if (!nickname || !nickname.trim()) {\n        return;\n      }\n      if (!mismatchError) {\n        setSignUpError(false);\n        setSignUpSuccess(false);\n        axios\n          .post(`${backUrl}/api/users`, { email, nickname, password })\n          .then((response) => {\n            console.log(response);\n            setSignUpSuccess(true);\n          })\n          .catch((error) => {\n            console.log(error.response?.data);\n            setSignUpError(error.response?.data?.code === 403);\n          });\n      }\n    },\n    [email, nickname, password, mismatchError],\n  );\n\n  if (userData) {\n    return <Redirect to=\"/workspace/sleact/channel/일반\" />;\n  }\n\n  return (\n    <div id=\"container\">\n      <Header>Sleact</Header>\n      <Form onSubmit={onSubmit}>\n        <Label id=\"email-label\">\n          <span>이메일 주소</span>\n          <div>\n            <Input type=\"email\" id=\"email\" name=\"email\" value={email} onChange={onChangeEmail} />\n          </div>\n        </Label>\n        <Label id=\"nickname-label\">\n          <span>닉네임</span>\n          <div>\n            <Input type=\"text\" id=\"nickname\" name=\"nickname\" value={nickname} onChange={onChangeNickname} />\n          </div>\n        </Label>\n        <Label id=\"password-label\">\n          <span>비밀번호</span>\n          <div>\n            <Input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={onChangePassword} />\n          </div>\n        </Label>\n        <Label id=\"password-check-label\">\n          <span>비밀번호 확인</span>\n          <div>\n            <Input\n              type=\"password\"\n              id=\"password-check\"\n              name=\"password-check\"\n              value={passwordCheck}\n              onChange={onChangePasswordCheck}\n            />\n          </div>\n          {mismatchError && <Error>비밀번호가 일치하지 않습니다.</Error>}\n          {!nickname && <Error>닉네임을 입력해주세요.</Error>}\n          {signUpError && <Error>이미 가입된 이메일입니다.</Error>}\n          {signUpSuccess && <Success>회원가입되었습니다! 로그인해주세요.</Success>}\n        </Label>\n        <Button type=\"submit\">회원가입</Button>\n      </Form>\n      <Link>\n        이미 회원이신가요?&nbsp;\n        <a href=\"/login\">로그인 하러가기</a>\n      </Link>\n    </div>\n  );\n}\n\nexport default SignUp;\n"],"names":["userData","useSWR","backUrl","fetcher","data","useState","signUpError","setSignUpError","signUpSuccess","setSignUpSuccess","mismatchError","setMismatchError","useInput","email","onChangeEmail","nickname","onChangeNickname","password","setPassword","passwordCheck","setPasswordCheck","onChangePassword","useCallback","e","target","value","onChangePasswordCheck","onSubmit","preventDefault","trim","axios","then","response","console","log","catch","error","code","to","id","type","name","onChange","href"],"sourceRoot":""}